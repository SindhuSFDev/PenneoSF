global class GetOpportunitiesToSync implements Schedulable {
    global void execute(SchedulableContext SC){
        Set<Id> accountIds = new Set<Id>();
        List<Opportunity> opptList = [SELECT Id,StageName,Younium__Order_type__c,Type,Younium__YouniumOrderId__c,Younium__Is_Synched_To_Younium__c,Account.Younium__Y_Synch_to_Younium__c,AccountId,Amount,Billing_Date__c,Billing_date_activation__c,CloseDate,Younium__Effective_change_date__c,Younium__Y_Effective_start_date__c,Name
                                      FROM Opportunity
                                      WHERE
                                      Billing_date_activation__c = true and StageName = 'Closed Won' and Younium__YouniumOrderId__c = null
                                      and Type != 'Upsell' and Younium__Is_Synched_To_Younium__c = false and Younium__Effective_change_date__c = null
                                      and Younium__Order_type__c != 'Change order' and WentThruClosedWonTrigger__c = true
                                     ];
        if(!opptList.isEmpty()){
            for(Opportunity opp : opptList){
                if(!opp.Account.Younium__Y_Synch_to_Younium__c){
                    accountIds.add(opp.AccountId);
                }
            }
            
            if(!accountIds.isEmpty()){
                List<Account> accts = [SELECT Id,Younium__Y_Synch_to_Younium__c
                                       FROM Account
                                       WHERE Id IN :accountIds];
                for(Account a : accts){
                    a.Younium__Y_Synch_to_Younium__c = true;
                }
                update accts;
            }
            System.debug('Opportunity List - '+opptList);
            SendOpportunityToYouniumQueueable sendOpp = new SendOpportunityToYouniumQueueable(opptList);
            System.enqueueJob(sendOpp);
        }
    }
    
    
    
    
    
    
    public static void testCodeCoverage() {
        Integer i = 1;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
        i++;
    }
}